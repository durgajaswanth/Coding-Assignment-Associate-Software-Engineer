Create an array with the values (1, 2, 3, 4, 5, 6, 7) and shuffle it.

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

public class ShuffleArray {

	public static void main(String[] args) {

		Integer[] a1 = { 1, 2, 3, 4, 5, 6, 7 };

		List<Integer> intList = Arrays.asList(a1);

		Collections.shuffle(intList);

		intList.toArray(a1);

		System.out.println(Arrays.toString(a1));
	}
}

Enter a Roman Number as input and convert it to an integer. (Example: IX = 9)

import java.util.*;
import java.io.*;
import java.lang.Math;
public class Main {
   public static void main(String args[]) {
      Main obj = new Main();
      Scanner sc = new Scanner(System.in);
      System.out.print("Enter a Roman Number in capital letters: ");
      String inputRoman= sc.nextLine();
      System.out.println("The Integer value of given Roman number is:"+obj.romanToInt(inputRoman));
   }
   int NumValue(char rom){
      if (rom == 'I')
         return 1;
      if (rom == 'V')
         return 5;
      if (rom == 'X')
         return 10;
      if (rom == 'L')
         return 50;
      if (rom == 'C')
         return 100;
      if (rom == 'D')
         return 500;
      if (rom == 'M')
         return 1000;
      return -1;
   } 
   int romanToInt(String str) {
      int sum = 0;
      for (int i=0; i<str.length(); i++) {
         int s1 = NumValue(str.charAt(i));
         if (i+1 <str.length()) {
            int s2 = NumValue(str.charAt(i+1));
            if (s1 >= s2) {
               sum = sum + s1;
            }
            else {
               sum = sum - s1;
            } 
         }
         else {
            sum = sum + s1;
         } 
      }
      return sum;
   } 
} 


Check if the input is pangram or not. (A pangram is a sentence that contains all the
alphabets from A to Z)

import java.util.Scanner;
 
class Main {
  public static void main(String[] args) {
    Scanner in = new Scanner(System.in);
 
    System.out.println("Enter a sentence/string:");
    String str= in.nextLine();
 
    //Array to store counts of 26 alphbets
    int count[] = new int[26];
    boolean flag = true;        //Assuming sentence is pangram
    char ch;
 
    //Loop through each character of a string
    for(int i=0; i<str.length(); i++){
        ch = str.charAt(i);
        
        if(ch == ' ')
        continue;
        if(ch>='A' && ch<='Z'){
            count[ch-'A']++;      
        } else if(ch>='a' && ch<='z'){
            count[ch-'a']++;      
        }
 
    }
 
    //checking if count array has any zeros
    for(int i=0; i<count.length; i++){
      if(count[i] == 0){
        flag = false;    //Not Pangram so break
        break;
      }
    }
 
    if(flag)
      System.out.println("Pangram");
    else 
      System.out.println("Not a Pangram String");
 
  }
}



